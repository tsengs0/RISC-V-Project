$date
	Thu Nov 29 16:30:44 2018
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb_if_id $end
$var wire 1 ! rtsn $end
$var wire 32 " pc_addr_id [31:0] $end
$var wire 32 # pc_addr [31:0] $end
$var wire 32 $ inst [31:0] $end
$var wire 32 % fetched_inst_id [31:0] $end
$var wire 1 & ce $end
$var reg 1 ' rstn $end
$var reg 1 ( sys_clk $end
$scope module u0 $end
$var wire 1 ' rstn $end
$var wire 1 ( sys_clk $end
$var reg 1 & ce $end
$var reg 32 ) pc_addr [31:0] $end
$upscope $end
$scope module u1 $end
$var wire 1 & ce $end
$var wire 32 * inst_addr [31:0] $end
$var wire 7 + inst_mem_index [6:0] $end
$var reg 32 , inst [31:0] $end
$upscope $end
$scope module u2 $end
$var wire 32 - fetched_inst_if [31:0] $end
$var wire 32 . pc_addr_if [31:0] $end
$var wire 1 ! rstn $end
$var wire 1 ( sys_clk $end
$var reg 32 / fetched_inst_id [31:0] $end
$var reg 32 0 pc_addr_id [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
bx /
bx .
b0 -
b0 ,
bx +
bx *
bx )
0(
0'
0&
bx %
b0 $
bx #
bx "
z!
$end
#100
b0 +
b0 #
b0 )
b0 *
b0 .
b0 %
b0 /
1(
#200
0(
#300
b0 "
b0 0
1(
#400
0(
#500
1(
#600
0(
#700
1(
#800
0(
#900
1(
#1000
bx $
bx ,
bx -
b1 +
1&
b100 #
b100 )
b100 *
b100 .
0(
1'
#1100
b10 +
b1000 #
b1000 )
b1000 *
b1000 .
bx %
bx /
b100 "
b100 0
1(
#1200
0(
#1300
b11 +
b1100 #
b1100 )
b1100 *
b1100 .
b1000 "
b1000 0
1(
#1400
0(
#1500
b100 +
b10000 #
b10000 )
b10000 *
b10000 .
b1100 "
b1100 0
1(
#1600
0(
#1700
b101 +
b10100 #
b10100 )
b10100 *
b10100 .
b10000 "
b10000 0
1(
#1800
0(
#1900
b110 +
b11000 #
b11000 )
b11000 *
b11000 .
b10100 "
b10100 0
1(
#2000
0(
#2100
b111 +
b11100 #
b11100 )
b11100 *
b11100 .
b11000 "
b11000 0
1(
#2200
0(
#2300
b1000 +
b100000 #
b100000 )
b100000 *
b100000 .
b11100 "
b11100 0
1(
#2400
0(
#2500
b1001 +
b100100 #
b100100 )
b100100 *
b100100 .
b100000 "
b100000 0
1(
#2600
0(
#2700
b1010 +
b101000 #
b101000 )
b101000 *
b101000 .
b100100 "
b100100 0
1(
#2800
0(
#2900
b1011 +
b101100 #
b101100 )
b101100 *
b101100 .
b101000 "
b101000 0
1(
#3000
0(
#3100
b1100 +
b110000 #
b110000 )
b110000 *
b110000 .
b101100 "
b101100 0
1(
#3200
0(
#3300
b1101 +
b110100 #
b110100 )
b110100 *
b110100 .
b110000 "
b110000 0
1(
#3400
0(
#3500
b1110 +
b111000 #
b111000 )
b111000 *
b111000 .
b110100 "
b110100 0
1(
#3600
0(
#3700
b1111 +
b111100 #
b111100 )
b111100 *
b111100 .
b111000 "
b111000 0
1(
#3800
0(
#3900
b10000 +
b1000000 #
b1000000 )
b1000000 *
b1000000 .
b111100 "
b111100 0
1(
#4000
0(
